class VulnerabilityScanResultsController < ApplicationController
  before_action :set_vulnerability_scan_result, only: [:show, :edit, :update, :destroy]

  # GET /vulnerability_scan_results
  # GET /vulnerability_scan_results.json
  def index
    @vulnerability_scan_results = VulnerabilityScanResult.all
  end

  # GET /vulnerability_scan_results/1
  # GET /vulnerability_scan_results/1.json
  def show
  end

  # GET /vulnerability_scan_results/new
  def new
    @vulnerability_scan_result = VulnerabilityScanResult.new
  end

  # GET /vulnerability_scan_results/1/edit
  def edit
  end

  # POST /vulnerability_scan_results
  # POST /vulnerability_scan_results.json
  def create
    @vulnerability_scan_result = VulnerabilityScanResult.new(vulnerability_scan_result_params)

    respond_to do |format|
      if @vulnerability_scan_result.save
        format.html { redirect_to @vulnerability_scan_result, notice: 'Vulnerability scan result was successfully created.' }
        format.json { render :show, status: :created, location: @vulnerability_scan_result }
      else
        format.html { render :new }
        format.json { render json: @vulnerability_scan_result.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /vulnerability_scan_results/1
  # PATCH/PUT /vulnerability_scan_results/1.json
  def update
    respond_to do |format|
      if @vulnerability_scan_result.update(vulnerability_scan_result_params)
        format.html { redirect_to @vulnerability_scan_result, notice: 'Vulnerability scan result was successfully updated.' }
        format.json { render :show, status: :ok, location: @vulnerability_scan_result }
      else
        format.html { render :edit }
        format.json { render json: @vulnerability_scan_result.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /vulnerability_scan_results/1
  # DELETE /vulnerability_scan_results/1.json
  def destroy
    @vulnerability_scan_result.destroy
    respond_to do |format|
      format.html { redirect_to vulnerability_scan_results_url, notice: 'Vulnerability scan result was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_vulnerability_scan_result
      @vulnerability_scan_result = VulnerabilityScanResult.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def vulnerability_scan_result_params
      params.require(:vulnerability_scan_result).permit(:device_id, :scanned_at, :threat_level, :description)
    end
end
